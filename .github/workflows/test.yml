name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        os: [ubuntu-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Run unit tests
      run: npm run test:unit

    - name: Run integration tests
      run: npm run test:integration

    - name: Run E2E tests
      run: npm run test:e2e

    - name: Run type checking
      run: npm run lint

    - name: Generate coverage report
      run: npm run test:coverage
      if: matrix.node-version == '20.x' && matrix.os == 'ubuntu-latest'

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.node-version == '20.x' && matrix.os == 'ubuntu-latest'
      with:
        file: ./coverage/coverage-final.json
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  test-examples:
    name: Test with real MCP servers
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Test with SDK server
      run: |
        timeout 30s node dist/bin/reloaderoo.js inspect list-tools -- node test-server-sdk.js || exit_code=$?
        if [ ${exit_code:-0} -eq 124 ]; then
          echo "Test timed out as expected"
          exit 0
        elif [ ${exit_code:-0} -eq 0 ]; then
          echo "Test completed successfully"
          exit 0
        else
          echo "Test failed with exit code $exit_code"
          exit 1
        fi

    - name: Test proxy mode functionality
      run: |
        # Start proxy in background and test it responds
        timeout 15s node dist/bin/reloaderoo.js -- node test-server-sdk.js &
        PROXY_PID=$!
        # Wait for proxy to be ready (with timeout)
        for i in {1..10}; do
          if lsof -p $PROXY_PID 2>/dev/null | grep -q LISTEN; then
            echo "Proxy is ready"
            break
          fi
          sleep 1
        done
        kill $PROXY_PID 2>/dev/null || true
        echo "Proxy mode test completed"

  performance-test:
    name: Performance benchmarks
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Run performance tests
      run: |
        # Test startup time
        echo "Testing startup time..."
        time timeout 10s node dist/bin/reloaderoo.js inspect server-info -- node test-server-sdk.js

        # Test memory usage
        echo "Testing memory usage..."
        timeout 10s node --max-old-space-size=256 dist/bin/reloaderoo.js inspect ping -- node test-server-sdk.js

        echo "Performance tests completed"
